/*
 * Copyright 2022 lonelytransistor
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http: //www.gnu.org/licenses/>.
 */
pragma Singleton
import QtQuick 2.2

QtObject {
    id: root

    // Info
    property bool isVertical: (plasmoid.formFactor == PlasmaCore.Types.Vertical)
    property bool isPlanar: (plasmoid.formFactor == PlasmaCore.Types.Planar)
    property int maxLen
    property bool editMode: false

    // Battery
    property var battery: {
        "now": 1,
        "rate": 2,
        "max": 4,
        "isCharging": false
    }

    // Size
    property int editSize: 32

    // Animations
    property bool animationsVisible: plasmoid.configuration.animationsVisible
    property bool boltVisible: plasmoid.configuration.boltVisible
    property bool bubblesVisible: plasmoid.configuration.bubblesVisible
    property bool breatheVisible: plasmoid.configuration.breatheVisible
    property int breatheDuration: plasmoid.configuration.breatheDuration*1000
    property int breatheDelay: plasmoid.configuration.breatheDelay*1000
    property double breatheOpacity: 0.7

    // Charge bar
    property bool chargeBarTopAlign: plasmoid.configuration.chargeBarTopAlign
    property bool chargeBarFlip: plasmoid.configuration.chargeBarFlip
    property bool chargeBarFlipOnCharging: plasmoid.configuration.chargeBarFlipOnCharging
    property color chargeBarColor: plasmoid.configuration.chargeBarColor
    property double chargeBarOpacity: plasmoid.configuration.chargeBarOpacity/255
    property color chargeBarChargingColor: plasmoid.configuration.chargeBarChargingColor
    property double chargeBarChargingOpacity: plasmoid.configuration.chargeBarChargingOpacity/255
    property int chargeBarOffset: plasmoid.configuration.chargeBarOffset
    property int chargeBarHeight: plasmoid.configuration.chargeBarHeight
    property int chargeBarMargin: plasmoid.configuration.chargeBarMargin

    // Rate bar
    property bool rateBarTopAlign: plasmoid.configuration.rateBarTopAlign
    property bool rateBarFlip: plasmoid.configuration.rateBarFlip
    property bool rateBarFlipOnCharging: plasmoid.configuration.rateBarFlipOnCharging
    property color rateBarColor: plasmoid.configuration.rateBarColor
    property double rateBarOpacity: plasmoid.configuration.rateBarOpacity/255
    property color rateBarChargingColor: plasmoid.configuration.rateBarChargingColor
    property double rateBarChargingOpacity: plasmoid.configuration.rateBarChargingOpacity/255
    property color rateBarSegmentsColor: plasmoid.configuration.rateBarSegmentsColor
    property double rateBarSegmentsOpacity: plasmoid.configuration.rateBarSegmentsOpacity/255
    property int rateBarOffset: plasmoid.configuration.rateBarOffset
    property int rateBarHeight: plasmoid.configuration.rateBarHeight
    property int rateBarMargin: plasmoid.configuration.rateBarMargin
    property double rateBarRescale: plasmoid.configuration.rateBarRescale

    // Others
    property int batteryUpdateInterval: plasmoid.configuration.updateInterval*10000
    property int dimensionsUpdateInterval: plasmoid.configuration.updateInterval*10000
    property int chargeBarValueOffset: plasmoid.configuration.chargeBarValueOffset
    property int rateBarValueOffset: plasmoid.configuration.rateBarValueOffset
    property int normalSize: plasmoid.configuration.normalSize
    property string devicePath: plasmoid.configuration.devicePath
}
